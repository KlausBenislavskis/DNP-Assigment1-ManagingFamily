@page "/Fam/{Id:int}/Children"
@using Assingment1.Data
@using Models
@using Assingment1.Pages.Comp
@inject IFamiliesData FamiliesData

@if (AllChidren == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!AllChidren.Any())
{
    <p>
        <em>No Children exist in this Family. Please add some.</em>
    </p>
}
else
{
    <table class="table border-top-0">
        <thead class="border-top-0">
        <tr>
            <th class="border-top-0">First Name</th>
            <th class="border-top-0">Last Name</th>
            <th class="border-top-0">HairColor</th>
            <th class="border-top-0">EyeColor</th>
            <th class="border-top-0">Age</th>
            <th class="border-top-0">Weight</th>
            <th class="border-top-0">Height</th>
            <th class="border-top-0">Sex</th>
            <AuthorizeView>
                <Authorized>
                    <th class="border-top-0">Remove</th>
                </Authorized>
            </AuthorizeView>
        </tr>
        </thead>
        <tbody>
        @foreach (var Child in AllChidren)
        {
            <tr>
                <td>@Child.FirstName</td>
                <td>@Child.LastName</td>
                <td>@Child.HairColor</td>
                <td>@Child.EyeColor</td>
                <td>@Child.Age</td>
                <td>@Child.Weight</td>
                <td>@Child.Height</td>
                <td>@Child.Sex</td>
                <AuthorizeView>
                    <Authorized>
                        <td>
                            <button @onclick="@(() => RemoveChild(Child.FirstName))">
                                <i class="trashcan oi oi-trash" style="color: lightgray">
                                </i>
                            </button>
                        </td>
                    </Authorized>
                </AuthorizeView>
            </tr>
        }
        </tbody>
    </table>
}
<AuthorizeView>
<Authorized>
    <div class="lg:w-1/12">
        <AddChildComp Children="AllChidren" Id="Id" StateChnaged="StateHasChanged"></AddChildComp>
    </div>
</Authorized>
</AuthorizeView>

@code {

    [CascadingParameter]
    public FamilyDetailed Layout { get; set; }

    [Parameter]
    public int Id { get; set; }

    private IList<Child> AllChidren;

    protected override async Task OnInitializedAsync()
    {
        Layout.Id = Id;

        AllChidren = FamiliesData.GetFamilies().First(f => f.Id == Id).Children;
        await Task.Delay(100);
    }


    private void RemoveChild(string childFirstName)
    {
        FamiliesData.RemoveChild(Id, childFirstName);
    }

}